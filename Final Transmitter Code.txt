#include<OneWire.h>
#include<DallasTemperature.h>
#include<VirtualWire.h>
#define SensorPin A3  //pH meter Analog output to Arduino Analog Input 0

#define Offset 0.00  //deviation compensate

//#define LED 13

#define samplingInterval 20

#define printInterval 800

#define ArrayLenth  40  //times of collection

int pHArray[ArrayLenth];  //Store the average value of the sensor feedback

int pHArrayIndex=0; 
#define ONE_WIRE_BUS 2

OneWire oneWire(ONE_WIRE_BUS);

DallasTemperature sensors(&oneWire);

char msg0[2],msg1[2],msg2[2];

void setup() 
{
 Serial.begin(9600);
 vw_setup(2000);
 sensors.begin();
 vw_set_tx_pin(12);
}

void loop() 
{
 sensors.requestTemperatures();
 int temp=sensors.getTempCByIndex(0);
 int tur=analogRead(A2);
 //int sensorArray[6];

 int pHValue,voltage;


 pHArray[pHArrayIndex++]=analogRead(SensorPin);

 if(pHArrayIndex==ArrayLenth)pHArrayIndex=0;

 voltage = avergearray(pHArray, ArrayLenth)*5/1024;

 pHValue = 4*voltage+Offset;
 
// int ph=pHValue;
 
 Serial.print(temp);
 Serial.print("\t");
 Serial.print(tur);
 Serial.print("\t");
 Serial.print(pHValue);
 Serial.print("\n");

 
 //Serial.println(temp);
 itoa(temp,msg0,10);
 itoa(tur,msg1,10);
 itoa(pHValue,msg2,10);
 char msg[4];

 for(int i=0;i<2;i++)
 {
  msg[i]=msg0[i];
 }

// 
// for(int i=0;i<2;i++)
// {
//  if(msg1[i]==NULL)msg[i+2]=1;
//  msg[i+2]=msg1[i];
// }
msg[2]=msg1[0];
 
// for(int i=0;i<2;i++)
// {
//  if(msg2[i]==NULL)msg[i+4]=1;
//  msg[i+4]=msg2[i];
// }
msg[3]=msg2[0];
 //msg[4]='\0';
  //Serial.println(msg1[0]);
  //Serial.println(msg2[0]);
  
 //Serial.println(msg);
 vw_send((uint8_t*)msg,strlen(msg));
 vw_wait_tx();
 
 delay(100);
//------------------------------------------------------//

 
}


double avergearray(int* arr, int number){

 int i;

 int max,min;

 double avg;

 long amount=0;

 if(number<=0){

 Serial.println("Error number for the array to avraging!/n");

 return 0;

 }

 if(number<5){  //less than 5, calculated directly statistics

 for(i=0;i<number;i++){

 amount+=arr[i];

 }

 avg = amount/number;

 return avg;

 }else{

 if(arr[0]<arr[1]){

 min = arr[0];max=arr[1];

 }

 else{

 min=arr[1];max=arr[0];

 }

 for(i=2;i<number;i++){

 if(arr[i]<min){

 amount+=min;  //arr<min

 min=arr[i];

 }else {

 if(arr[i]>max){

 amount+=max;  //arr>max

 max=arr[i];

 }else{

 amount+=arr[i]; //min<=arr<=max

 }

 }//if

 }//for

 avg = (double)amount/(number-2);

 }//if

 return avg;

}